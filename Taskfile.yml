version: '3'

silent: true

tasks:
  verify:
    cmds:
    - which docker 12> /dev/null
    - which go 12> /dev/null
    - which golangci-lint 12> /dev/null
    - which goveralls 12> /dev/null
    - docker version >> /dev/null || (echo 'docker daemon is not running' && exit 1)

  install-tools:
    cmds:
    - "$(cd $HOME && curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh  | sh -s v1.46.1)"
    - "$(go install github.com/mattn/goveralls@latest)"

  install:
    cmds:
    - go mod download

  world:
    cmds:
      - task: verify
      - task: test
      - task: integration-test
      - task: lint
      - task: cleanup

  test:
    deps: [stop-device-simulation-container]
    cmds:
    - go test -covermode=count -coverprofile=coverage.out $(go list ./... | grep -v '/test/integration') -count=1

  integration-test:
    cmds:
      - task: build-device-simulation-image
      - task: start-device-simulation-container
      - go test ./test/integration -count=1
      - task: stop-device-simulation-container

  build-device-simulation-image:
    dir: test/device-simulation
    cmds:
      - docker image build -t golang-tplink-hs100:device-simulation . >> /dev/null

  start-device-simulation-container:
    deps: [stop-device-simulation-container]
    cmds:
      - docker container run -e DEBUG=* -p 9999:9999 --name tplink-device-simulation --rm -d golang-tplink-hs100:device-simulation >> /dev/null

  stop-device-simulation-container:
    cmds:
      - docker container rm -f tplink-device-simulation &>> /dev/null || true

  lint:
    cmds:
    - golangci-lint run

  cleanup:
    cmds:
    - go mod verify
    - go mod tidy  

  coveralls-analysis:
    cmds:
    - goveralls -coverprofile=coverage.out -service=github

  sonar-analysis:
    cmds:
    - gover
    - sonar-scanner

  default:
    cmds: [ task: world ]